name: Build PyInstaller Executable

on:
  push:
    branches:
      - main # Trigger on push to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile transcript_analysis.py

          - name: Create Git Tag
          id: create_tag
          run: |
            # Generate the next version tag
            current_version=$(git describe --tags --abbrev=0 || echo "v0.0.0")
            major=$(echo $current_version | cut -d. -f1 | tr -d v)
            minor=$(echo $current_version | cut -d. -f2)
            patch=$(echo $current_version | cut -d. -f3)
            new_version="v${major}.$((minor + 1))"
            echo "New Version: $new_version"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag $new_version
            git push origin $new_version
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.new_version }}
          release_name: "Release ${{ steps.create_tag.outputs.new_version }}"
          body: |
            Automated release for the new executable build.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Executable to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/Transcript-Generator
          asset_name: Transcript-Generator
          asset_content_type: application/octet-stream
